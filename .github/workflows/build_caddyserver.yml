name: Build caddyserver

on:
  - workflow_dispatch

jobs:
  sdist:
    name: sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6

      - run: uv build --sdist
        working-directory: ./caddyserver

      - run: ls caddyserver/dist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: caddyserver/dist

  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: nu {0}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            post-command: uvx wheel tags --remove --platform-tag manylinux_2_17_x86_64.manylinux2014_x86_64.musllinux_1_1_x86_64 dist/*.whl

          - os: ubuntu-24.04-arm
            post-command: uvx wheel tags --remove --platform-tag manylinux_2_17_aarch64.manylinux2014_aarch64.musllinux_1_1_aarch64 dist/*.whl

          - os: macos-13
            post-command: uvx wheel tags --remove --platform-tag macosx_11_0_x86_64 dist/*.whl

          - os: macos-latest
            post-command: uvx wheel tags --remove --platform-tag macosx_11_0_arm64 dist/*.whl

          - os: windows-latest
            post-command: uvx wheel tags --remove --platform-tag win_amd64 dist/*.whl

          - os: windows-11-arm
            post-command: uvx wheel tags --remove --platform-tag win_arm64 dist/*.whl

    steps:
      - uses: hustcer/setup-nu@v3
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build wheel
        run: |
          uv build --wheel
        working-directory: ./caddyserver
        env:
          EGET_GITHUB_TOKEN: ${{ github.token }}

      - name: Post Processing wheel
        shell: bash
        run: |
          ${{ matrix.post-command }}
        working-directory: ./caddyserver

      - name: Test wheel
        run: |
          pip install --no-index -f caddyserver/dist/ caddyserver-bin

          caddy --version

          do -i { objdump -T (which caddy | get path.0) }

          echo `http://127.0.0.1:23333 {
            respond "Hello, World!"
          }` | save Caddyfile

          caddy fmt --overwrite Caddyfile
          caddy validate --config Caddyfile

          caddy start --config Caddyfile
          http get http://127.0.0.1:23333 | to text | print

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ github.run_attempt }}
          path: caddyserver/dist

      - run: ls caddyserver/dist

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [sdist, build]
    environment: publish
    permissions:
      id-token: write
      attestations: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - uses: actions/attest-build-provenance@v2
        with:
          subject-path: dist/*
      - run: ls dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
