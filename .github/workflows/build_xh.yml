name: Build xh

on:
  - workflow_dispatch

jobs:
  wheel:
    name: build-${{ matrix.os }}-${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            flags: "--features=native-tls --zig --auditwheel repair"
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            flags: "--zig"
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            flags: "--features=native-tls --zig --auditwheel repair"
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-musl
            flags: "--zig"
          - os: macos-latest
            target: x86_64-apple-darwin
            flags: "--features=native-tls --zig"
          - os: macos-latest
            target: aarch64-apple-darwin
            flags: "--features=native-tls --zig"
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            flags: "--features=native-tls --zig"
          - os: windows-11-arm
            target: aarch64-pc-windows-msvc
            flags: "--features=native-tls --zig"

    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init -- xh/xh
      - uses: dtolnay/rust-toolchain@stable
      - uses: mlugg/setup-zig@v2
      - uses: KyleMayes/install-llvm-action@v2
        with:
          version: "20"
          env: true

      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out dist ${{ matrix.flags }}
          target: ${{ matrix.target }}
          working-directory: ./xh

      - run: ls -R xh/dist

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-${{ matrix.target }}-${{ github.run_attempt }}
          path: xh/dist/*.whl
          if-no-files-found: error

  sdist:
    name: sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - run: git submodule update --init -- xh/xh
      - uses: astral-sh/setup-uv@v6

      - run: uv build --sdist
        working-directory: ./xh

      - run: ls xh/dist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: xh/dist/*.tar.gz
          if-no-files-found: error

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [sdist, wheel]
    environment: publish
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: dist

      - run: ls -R dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
